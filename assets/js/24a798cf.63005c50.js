"use strict";(self.webpackChunkhtwm_623_website=self.webpackChunkhtwm_623_website||[]).push([[2069],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var s=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=s.createContext({}),l=function(e){var n=s.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return s.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},h=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=l(t),h=r,d=p["".concat(u,".").concat(h)]||p[h]||m[h]||o;return t?s.createElement(d,i(i({ref:n},c),{},{components:t})):s.createElement(d,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a[p]="string"==typeof e?e:r,i[1]=a;for(var l=2;l<o;l++)i[l]=t[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}h.displayName="MDXCreateElement"},7871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=t(1163),r=(t(9496),t(9613));const o={title:"VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",urlname:"svueta",date:"2021-04-14 23:48:54 +0800",tags:["vuepress","serverless","ci/cd"],categories:["\u6280\u672f\u7b14\u8bb0"]},i=void 0,a={unversionedId:"VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",id:"VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",title:"VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",description:"\u53c2\u8003 Hexo\uff1a\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions \u6301\u7eed\u96c6\u6210",source:"@site/docs/VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210.md",sourceDirName:".",slug:"/VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",permalink:"/docs/VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",draft:!1,tags:[{label:"vuepress",permalink:"/docs/tags/vuepress"},{label:"serverless",permalink:"/docs/tags/serverless"},{label:"ci/cd",permalink:"/docs/tags/ci-cd"}],version:"current",frontMatter:{title:"VuePress\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions\u6301\u7eed\u96c6\u6210",urlname:"svueta",date:"2021-04-14 23:48:54 +0800",tags:["vuepress","serverless","ci/cd"],categories:["\u6280\u672f\u7b14\u8bb0"]},sidebar:"tutorialSidebar",previous:{title:"VuePress\u535a\u5ba2\u642d\u5efa",permalink:"/docs/VuePress\u535a\u5ba2\u642d\u5efa"},next:{title:"Vue\u81ea\u52a8\u68c0\u6d4b\u5237\u65b0index.html",permalink:"/docs/Vue\u81ea\u52a8\u68c0\u6d4b\u5237\u65b0"}},u={},l=[{value:"\u914d\u7f6e Github Actions \u811a\u672c",id:"\u914d\u7f6e-github-actions-\u811a\u672c",level:2},{value:"\u914d\u7f6e\u817e\u8baf\u4e91\u51fd\u6570",id:"\u914d\u7f6e\u817e\u8baf\u4e91\u51fd\u6570",level:2},{value:"\u9644: GitHub Actions push commit \u793a\u4f8b",id:"\u9644-github-actions-push-commit-\u793a\u4f8b",level:2},{value:"\u9644: Actions \u4e2d\u540c\u65f6\u62c9\u53d6\u591a\u4e2a\u4ed3\u5e93\u793a\u4f8b",id:"\u9644-actions-\u4e2d\u540c\u65f6\u62c9\u53d6\u591a\u4e2a\u4ed3\u5e93\u793a\u4f8b",level:2}],c={toc:l},p="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,s.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u53c2\u8003 ",(0,r.kt)("a",{parentName:"p",href:"https://www.zhwei.cn/hexo-github-actions-yuque/"},"Hexo\uff1a\u8bed\u96c0\u4e91\u7aef\u5199\u4f5c Github Actions \u6301\u7eed\u96c6\u6210"),"\n\u672c\u6587\u53ea\u4f5c\u4e3a\u81ea\u5df1\u4f7f\u7528\u7684\u8bb0\u5f55\uff0c \u539f\u6587\u5185\u5bb9\u66f4\u4e3a\u8be6\u5c3d\n\u672c\u6587\u4e3b\u8981\u8bb0\u5f55\u90e8\u7f72\u6d41\u7a0b\uff0c vuepress \u914d\u7f6e\u4e0d\u8be6\u7ec6\u5217\u51fa")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/learn-github-actions"},"Github Actions"),"\u662f Github \u63a8\u51fa\u7684\u4e00\u6b3e\u6301\u7eed\u96c6\u6210\u5de5\u5177,\u6bcf\u6708\u6709\u514d\u8d39\u65f6\u957f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.yuque.com/dashboard"},"\u8bed\u96c0"),"*","*"," ","*","*","\u652f\u6301 markdown \u7684\u5728\u7ebf\u6587\u6863\u77e5\u8bc6\u5e93\uff0c \u652f\u6301 webhook"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/x-cold/yuque-hexo"},"yuque-hexo")," \u540c\u6b65\u8bed\u96c0\u77e5\u8bc6\u5e93\u7684\u4e91\u7aef\u5de5\u5177"),(0,r.kt)("li",{parentName:"ul"},"serverless faas \u4e91\u51fd\u6570\uff0c\u817e\u8baf\u4e91\u548c\u963f\u91cc\u4e91\u5747\u6709\u514d\u8d39\u989d\u5ea6\uff0c \u963f\u91cc\u4e91\u9700\u8981\u81ea\u5907\u57df\u540d\uff0c \u6216\u8005\u53ef\u4ee5\u9009\u62e9 netlify \u6216\u5728 codesandbox \u521b\u5efa\u9879\u76ee")),(0,r.kt)("h2",{id:"\u914d\u7f6e-github-actions-\u811a\u672c"},"\u914d\u7f6e Github Actions \u811a\u672c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5728\u9879\u76ee github \u4ed3\u5e93\u4e2d\uff0c \u8fdb\u5165 Actions\uff0c \u9009\u62e9\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c \u4ee5\u4e0b\u4e3a\u914d\u7f6e\u6587\u4ef6(\u66f4\u591a\u914d\u7f6e\u8bf7\u9605\u8bfb Actions \u7684\u6587\u6863)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# This is a basic workflow to help you get started with Actions\nname: CI\n\n# Controls when the action will run.\n# push \u548c\u5916\u90e8\u89e6\u53d1\non: [push, repository_dispatch]\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called "build"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2\n\n        # from: https://github.com/actions/setup-node\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: "12.x"\n\n      # Runs a set of commands using the runners shell\n      - name: Run a multi-line script\n        run: |\n          npm install yuque-hexo -g\n          npm install\n          npm run yuque\n          npm run build\n      # from https://github.com/peaceiris/actions-gh-pages\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          # \u6b64\u5904 VUEPRESS_TOKEN\u4e3assh\u79c1\u94a5\uff0c \u5728 \u9879\u76eeSetting Secrets\u4e2d\u914d\u7f6e\uff0c \u53ef\u81ea\u884c\u53d6\u540d\n          deploy_key: ${{ secrets.VUEPRESS_TOKEN }}\n          # \u90e8\u7f72gh-pages\u7684\u7528\u6237\u53ca\u4ed3\u5e93\u540d\uff0c \u5fc5\u987b\u4e3a\u516c\u5f00\u5e93\n          external_repository: htwm623/htwm623.github.io\n          publish_branch: master\n          publish_dir: ./dist\n          commit_message: ${{ github.event.head_commit.message }}\n')),(0,r.kt)("p",null,"\u53ef\u63d0\u4ea4\u6d4b\u8bd5 Actions \u662f\u5426\u901a\u7545"),(0,r.kt)("h2",{id:"\u914d\u7f6e\u817e\u8baf\u4e91\u51fd\u6570"},"\u914d\u7f6e\u817e\u8baf\u4e91\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import requests\n\ndef main_handler(event, context):\n    headers = {\n        \"User-Agent\":'curl/7.52.1',\n        'Content-Type': 'application/json',\n        'Accept': 'application/vnd.github.everest-preview+json',\n        'Authorization': 'token YOUR_PERSONAL_TOKEN' # \u6ce8\u610f\u5c0f\u5199token\u4e0d\u8981\u7701\u7565\n    }\n    # https://api.github.com/repos/:owner/repo/dispatches\n    r = requests.post(\"https://api.github.com/repos/htwm623/htwm-vue-blog/dispatches\", json={\"event_type\": \"start\"}, headers=headers)\n    if r.status_code == 204:\n        return \"This's OK!\"\n    else:\n        return r.status_code\n\n")),(0,r.kt)("p",null,"\u6d4b\u8bd5\u89e6\u53d1\u51fd\u6570, \u5982\u679c github actions \u6b63\u5e38\u89e6\u53d1, \u518d\u8bbe\u7f6e\u4e91\u51fd\u6570\u89e6\u53d1"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u89e6\u53d1\u65b9\u5f0f\uff1aAPI \u7f51\u5173\u89e6\u53d1\u5668"),(0,r.kt)("li",{parentName:"ul"},"API \u670d\u52a1\u7c7b\u578b\uff1a\u65b0\u5efa API \u670d\u52a1"),(0,r.kt)("li",{parentName:"ul"},"API \u670d\u52a1\uff1aSCF_API_SERVICE"),(0,r.kt)("li",{parentName:"ul"},"\u8bf7\u6c42\u65b9\u6cd5\uff1aANY"),(0,r.kt)("li",{parentName:"ul"},"\u53d1\u5e03\u73af\u5883\uff1a\u53d1\u5e03"),(0,r.kt)("li",{parentName:"ul"},"\u9274\u6743\u65b9\u6cd5\uff1a\u514d\u9274\u6743"),(0,r.kt)("li",{parentName:"ul"},"\u542f\u52a8\u96c6\u6210\u54cd\u5e94\uff1a\u672a\u542f\u7528")),(0,r.kt)("p",null,"\u590d\u5236\u4e91\u51fd\u6570\u8bbf\u95ee\u94fe\u63a5, \u5728\u8bed\u96c0\u77e5\u8bc6\u5e93\u8bbe\u7f6e -> \u5f00\u53d1\u8005 \u8bbe\u7f6e web hook"),(0,r.kt)("h2",{id:"\u9644-github-actions-push-commit-\u793a\u4f8b"},"\u9644: GitHub Actions push commit \u793a\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the action will run.\non:\n  # Triggers the workflow on push or pull request events but only for the master branch\n  repository_dispatch:\n    branches: [ master ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called "build"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2\n\n      # Runs a single command using the runners shell\n      - name: Setup Node.js 14.x\n        uses: actions/setup-node@master\n        with:\n          node-version: "14.x"\n\n      # Runs a set of commands using the runners shell\n      - name: Run a multi-line script\n        run: |\n          npm i\n          npm run yuque\n      - name: Deploy\n        run: |\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add .\n          time=$(date "+%Y-%m-%d %H:%M:%S")\n          git commit -m "commit at $time"\n          git push\n')),(0,r.kt)("h2",{id:"\u9644-actions-\u4e2d\u540c\u65f6\u62c9\u53d6\u591a\u4e2a\u4ed3\u5e93\u793a\u4f8b"},"\u9644: Actions \u4e2d\u540c\u65f6\u62c9\u53d6\u591a\u4e2a\u4ed3\u5e93\u793a\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'name: CI\non:\n  repository_dispatch:\n    branches: [master]\n  workflow_dispatch:\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called "build"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2\n        with:\n          path: main\n\n      # Runs a single command using the runners shell\n      - name: Setup Node.js 14.x\n        uses: actions/setup-node@master\n        with:\n          node-version: "14.x"\n\n      # Runs a set of commands using the runners shell\n      - name: Run a multi-line script\n        run: |\n          pwd\n          cd main\n          npm i\n          npm run yuque\n          cd ..\n      - name: checkout libary\n        uses: actions/checkout@v2\n        with:\n          repository: htwm623/yuque-notes-library\n          token: ${{ secrets.YUQUE_NOTES_LIBARY_TOKEN }}\n          path: yuque-notes\n      - name: Run a multi-line script\n        run: |\n          rm -rf yuque-notes/yuque-interview\n          mkdir yuque-notes/yuque-interview\n          cp -rf main/yuque-interview/* yuque-notes/yuque-interview\n          cd yuque-notes\n\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add .\n          time=$(date "+%Y-%m-%d %H:%M:%S")\n          git commit -m "commit at $time"\n          git push\n')))}m.isMDXComponent=!0}}]);