"use strict";(self.webpackChunkhtwm_623_website=self.webpackChunkhtwm_623_website||[]).push([[3448],{9613:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,u=d["".concat(p,".").concat(m)]||d[m]||y[m]||c;return n?r.createElement(u,a(a({ref:t},l),{},{components:n})):r.createElement(u,a({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>y,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var r=n(1163),o=(n(9496),n(9613));const c={title:"\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",urlname:"vc4efv",date:"2022-01-24 23:39:01 +0800",tags:["\u722c\u866b","python"],categories:["\u6280\u672f\u7b14\u8bb0"]},a=void 0,i={unversionedId:"\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",id:"\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",title:"\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",description:"\u4f7f\u7528 API \u6253\u5f00\u6d4f\u89c8\u5668\u8df3\u8f6c\u81f3\u6307\u5b9a\u7f51\u5740",source:"@site/docs/\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f.md",sourceDirName:".",slug:"/\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",permalink:"/docs/\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",draft:!1,tags:[{label:"\u722c\u866b",permalink:"/docs/tags/\u722c\u866b"},{label:"python",permalink:"/docs/tags/python"}],version:"current",frontMatter:{title:"\u83b7\u53d6chrome\u6d4f\u89c8\u5668cookies\u4fe1\u606f",urlname:"vc4efv",date:"2022-01-24 23:39:01 +0800",tags:["\u722c\u866b","python"],categories:["\u6280\u672f\u7b14\u8bb0"]},sidebar:"tutorialSidebar",previous:{title:"\u63d0\u5347github\u4ee3\u7801\u62c9\u53d6\u901f\u5ea6",permalink:"/docs/\u63d0\u5347github\u4ee3\u7801\u62c9\u53d6\u901f\u5ea6"},next:{title:"\u865a\u5ea6\u5149\u9634",permalink:"/docs/\u865a\u5ea6\u5149\u9634"}},p={},s=[{value:"\u4f7f\u7528 API \u6253\u5f00\u6d4f\u89c8\u5668\u8df3\u8f6c\u81f3\u6307\u5b9a\u7f51\u5740",id:"\u4f7f\u7528-api-\u6253\u5f00\u6d4f\u89c8\u5668\u8df3\u8f6c\u81f3\u6307\u5b9a\u7f51\u5740",level:2},{value:"python \u89e3\u6790 chrome \u672c\u5730\u6570\u636e\u5e93",id:"python-\u89e3\u6790-chrome-\u672c\u5730\u6570\u636e\u5e93",level:2},{value:"\u53c2\u8003\u8d44\u6599",id:"\u53c2\u8003\u8d44\u6599",level:2}],l={toc:s},d="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u4f7f\u7528-api-\u6253\u5f00\u6d4f\u89c8\u5668\u8df3\u8f6c\u81f3\u6307\u5b9a\u7f51\u5740"},"\u4f7f\u7528 API \u6253\u5f00\u6d4f\u89c8\u5668\u8df3\u8f6c\u81f3\u6307\u5b9a\u7f51\u5740"),(0,o.kt)("p",null,"\u672c\u6bb5\u4ee3\u7801\u65e8\u5728\u5237\u65b0 cookies \u4fe1\u606f\uff0c\u5982\u4e0d\u9700\u8981\u53ef\u7565\u8fc7\n\u672c\u8d28\u662f\u5229\u7528\u6d4f\u89c8\u5668\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u6253\u5f00\u7a97\u53e3\n\u4e14\u6253\u5f00\u540e\u4e0d\u80fd\u5355\u72ec\u5173\u95ed\u7a97\u53e3\uff0c\u8981\u5173\u95ed\u53ea\u80fd\u901a\u8fc7\u8fdb\u7a0b\u6740\u6d4f\u89c8\u5668"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import webbrowser\nurl = 'https://docs.python.org/'\n\n# Open URL in a new tab, if a browser window is already open.\nwebbrowser.open_new_tab(url)\n")),(0,o.kt)("h2",{id:"python-\u89e3\u6790-chrome-\u672c\u5730\u6570\u636e\u5e93"},"python \u89e3\u6790 chrome \u672c\u5730\u6570\u636e\u5e93"),(0,o.kt)("p",null,"chrome \u672c\u5730 cookies \u6570\u636e\u5e93\u6587\u4ef6(sqlite)\u8def\u5f84\u4e3a\nC:\\Users\\<\u7528\u6237>\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cookies\n\u4e0b\u6bb5\u4ee3\u7801\u4e3a\u89e3\u6790 chrome 80+\u7248\u672c\u6570\u636e\u5e93\u4fe1\u606f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import sqlite3\nimport urllib3\nimport os\nimport json\n\nimport sys\nimport base64\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\n\n\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n\ndef dpapi_decrypt(encrypted):\n    import ctypes\n    import ctypes.wintypes\n\n    class DATA_BLOB(ctypes.Structure):\n        _fields_ = [('cbData', ctypes.wintypes.DWORD),\n                    ('pbData', ctypes.POINTER(ctypes.c_char))]\n\n    p = ctypes.create_string_buffer(encrypted, len(encrypted))\n    blobin = DATA_BLOB(ctypes.sizeof(p), p)\n    blobout = DATA_BLOB()\n    retval = ctypes.windll.crypt32.CryptUnprotectData(\n        ctypes.byref(blobin), None, None, None, None, 0, ctypes.byref(blobout))\n    if not retval:\n        raise ctypes.WinError()\n    result = ctypes.string_at(blobout.pbData, blobout.cbData)\n    ctypes.windll.kernel32.LocalFree(blobout.pbData)\n    return result\n\n\ndef aes_decrypt(encrypted_txt):\n    with open(os.path.join(os.environ['LOCALAPPDATA'],\n                           r\"Google\\Chrome\\User Data\\Local State\"), encoding='utf-8', mode=\"r\") as f:\n        jsn = json.loads(str(f.readline()))\n    encoded_key = jsn[\"os_crypt\"][\"encrypted_key\"]\n    encrypted_key = base64.b64decode(encoded_key.encode())\n    encrypted_key = encrypted_key[5:]\n    key = dpapi_decrypt(encrypted_key)\n    nonce = encrypted_txt[3:15]\n    cipher = Cipher(algorithms.AES(key), None, backend=default_backend())\n    cipher.mode = modes.GCM(nonce)\n    decryptor = cipher.decryptor()\n    return decryptor.update(encrypted_txt[15:])\n\n\ndef chrome_decrypt(encrypted_txt):\n    if sys.platform == 'win32':\n        try:\n            if encrypted_txt[:4] == b'x01x00x00x00':\n                decrypted_txt = dpapi_decrypt(encrypted_txt)\n                return decrypted_txt.decode()\n            elif encrypted_txt[:3] == b'v10':\n                decrypted_txt = aes_decrypt(encrypted_txt)\n                return decrypted_txt[:-16].decode()\n        except WindowsError:\n            return None\n    else:\n        raise WindowsError\n\n\ndef get_cookies_from_chrome(domain):\n    sql = f'SELECT name, encrypted_value as value FROM cookies where host_key like \"%{domain}%\"'\n    filename = os.path.join(os.environ['USERPROFILE'], r'AppData\\Local\\Google\\Chrome\\User Data\\default\\Cookies')\n    con = sqlite3.connect(filename)\n    con.row_factory = sqlite3.Row\n    cur = con.cursor()\n    cur.execute(sql)\n    cookie = ''\n    for row in cur:\n        if row['value'] is not None:\n            name = row['name']\n            value = chrome_decrypt(row['value'])\n            if value is not None:\n                cookie += name + '=' + value + ';'\n    return cookie\n\n\nif __name__ == '__main__':\n    domain = 'taobao.com'   # \u76ee\u6807\u7f51\u7ad9\u57df\u540d\n    cookie = get_cookies_from_chrome(domain)\n    print(cookie)\n")),(0,o.kt)("h2",{id:"\u53c2\u8003\u8d44\u6599"},"\u53c2\u8003\u8d44\u6599"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/zh-cn/3/library/webbrowser.html"},"python webbrowser \u6587\u6863")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.pythonf.cn/read/65224"},"\u5982\u4f55\u5728 python3 chrome80+\u4e2d\u89e3\u5bc6 cookies"))))}y.isMDXComponent=!0}}]);